---
- hosts: armpit
  remote_user: root
  vars:
    mongodbrepodef: |
      [mongodb]
      name=MongoDB repo
      baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/
      gpgcheck=0
      enabled=1
  tasks:
    - name: Ensure EPEL is installed
      yum: name=epel-release state=latest
    - name: Ensure nodejs is installed
      yum: name=nodejs state=latest
    - name: Ensure npm is installed
      yum: name=npm state=latest
    - name: Ensure git is installed
      yum: name=git state=latest
    - name: Ensure php is installed
      yum: name=php state=latest
    - name: Ensure php-mysql is installed
      yum: name=php-mysql state=latest
    - name: Ensure php-fpm is installed
      yum: name=php-fpm state=latest
#    - name: Add Mongodb repository
#      copy: content="{{ mongodbrepodef }}" dest=/etc/yum.repos.d/mongodb.repo
    - name: Ensure mongodb is installed
      yum: name=mongodb state=latest
    - name: Ensure mongodb-server is installed
      yum: name=mongodb-server state=latest
    - name: Ensure mongod is enabled and started
      service: name=mongod enabled=yes state=started
    - name: Ensure php-pecl-mongo is installed
      yum: name=php-pecl-mongo state=latest
    - name: Ensure ruby is installed
      yum: name=ruby state=latest
    - name: Ensure ruby-devel is installed
      yum: name=ruby-devel state=latest
    - name: Ensure rubygems is installed
      yum: name=rubygems state=latest
    - name: Ensure rpm-build is installed
      yum: name=rpm-build state=latest
    - name: Ensure the fpm gem installed
      command: gem install fpm
    - name: Install composer
      shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
      args:
        creates: /usr/local/bin/composer        
    - name: PHP phar.readonly turned Off
      ini_file: dest=/etc/php.ini section=Phar option=phar.readonly value=Off
    - name: Setup github global oauth
      shell: "composer config --global github-oauth.github.com {{ githubOauth }}"
      become: yes
      become_user: "{{ remote_user }}"      
    - name: Build project with npm as vagrant user
      shell: npm install
      become: yes
      become_user: "{{ remote_user }}"
      args:
        chdir: /vagrant
    - name: Have Grunt run fpm and build an RPM file
      shell: node_modules/grunt-cli/bin/grunt buildrpm
      become: yes
      become_user: "{{ remote_user }}"
      args:
        chdir: /vagrant
    - name: install armpit rpm from a local file
      yum: name={{ item }} state=present
      with_fileglob:
        - /vagrant/deploy/*.rpm
